% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjMatrix.R
\name{adjMatrix}
\alias{adjMatrix}
\title{Pedigree adjacency matrix}
\usage{
adjMatrix(adj, sex, validate = TRUE)
}
\arguments{
\item{adj}{A square matrix, converted internally to be of "logical" type. If
\code{adj} is a vector it is recycled and converted to matrix, using \code{sex} to
deduce the dimensions. If missing, a matrix with all elements FALSE is
returned.}

\item{sex}{A gender vector, i.e. a vector where all elements are 1 (male) or
2 (female).}

\item{validate}{A logical indicating if the validity of the created object
should be checked.}
}
\value{
An object of class \code{adjMatrix}. This is a square logical matrix, with
an attribute \code{sex} which is an integer vector of gender codes (1 = male; 2
= female).
}
\description{
Construct adjacency matrices corresponding to pedigrees.
}
\details{
A pedigree can be thought of a a directed acyclic graph (DAG), with the
pedigree members as nodes, and an edge from A to B if and only if A is a
parent of B. Since no pedigree member have more than 2 parents, any node of
the corresponding graphs has at most 2 incoming edges.

The adjacency matrix of a graph G is a square logical matrix with TRUE in
entry \verb{(i,j)} if and only if there is an edge from node \code{i} to node \code{j}.

Since sex is not encoded in the adjacency matrix itself, we add the vector
of genders as an attribute \code{sex}.
}
\examples{
# An adjacency matrix corresponding to a family trio
# Member order: Father - mother - son
adjMatrix(c(0,0,0,0,0,0,1,1,0), sex = c(1,2,1))

#' # An empty adjacency matrix for 3 male individuals
adjMatrix(sex = c(1,1,1))

}
